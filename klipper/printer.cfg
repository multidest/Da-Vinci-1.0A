# This printer config file uses a modified version of example-cartesian.cfg
# This cfg is intended for a Xyz Printing Inc. DaVinci 1.0 original 3dPrinter. (not a 1.0A)
# SAFETY WARNING: The thermistors on the DaVinci have custom definintion in this config. They seem to be working but are not verified.
# the settings were obtained from the eeprom from my working printer, and from Custom Repetier .91 and .92 configuration.h files written for the DaVinci printers.
# So far so good. But again this is not for 1.0A, 2.0, 2.0A, or AiO printers. If anyone needs help trying to modify for those please let me know.
#[*] Enable extra low-level configuration options
#    Micro-controller Architecture (SAM3/SAM4/SAM E70 (Due and Duet))  --->
#    Processor model (SAM3x8e (Arduino Due))  --->
#    Communication interface (USB)  --->
#    USB ids  --->
#      (!PA12,!PA13,PA0,PB5,PD6,!PB4,!PD5,!PD9,!PC22,!PB24,!PC18) GPIO pins to set at micro-controller startup
# 
# The DaVinci have NEMA17 1.8* stepper motors and A4988 drivers, 
# X and Y use 2mm belts and 20 tooth pulleys; The Z axis uses a NEMA17 HighTorque Motor with an M8 Threaded Rod.
# The Extruder is a NEMA17 direct drive hobbed gear with integrated optical filament runout and opto-mechanical motion sensor.
# The optical filament runout sensor detects end of filament before it gets to the drive gear causing a jam. 
# This can auto-pause the print and allow a new spool filament to be loaded thereby saving the print.
# The runout sensor is default enabled: but may be disabled to help with transparent/translucent filaments that are hard to detect with an optical sensor.
# The optical filament motion sensor opto-mechanicaly detects movement in the extruder/idler gear train.
# The ability to determine filament width using this detector may be of value.
# It is intended to detect filament slowing down from width issues, slipping/grinding due to incorect temps, and full on extruder jams (default enabled: but can be disabled)
# The LCD is a WINStar 1604 and is not yet operational in this config. I believe its a hd47780 init and/or font issue 
# Stock extruder [200 steps/rot]*[16 steps]/[99 steps/mm] 32.3232mm rotation_distance 
# Stock xy_steppers [200 steps/rot]*[16 steps]/[80 steps/mm] 40mm rotation_distance 
# Stock z_stepper [200 steps/rot]*[16 steps]/[2560 steps/mm] 1.25mm rotation_distance (this is an M8 Leadscrew)

[include fluidd.cfg]

[include macros.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_sam3x8e_20313252773538383235303130303236-if00
baud: 250000
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1000
max_z_velocity: 5
max_z_accel: 100

[safe_z_home]
home_xy_position: 233,212
speed: 90.0
z_hop: 10
z_hop_speed: 10.0

[stepper_x]
step_pin: PD5
dir_pin: PD4
enable_pin: !PD6
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: ^PD7
position_min: -4
position_endstop: 233
position_max: 233
homing_speed: 40
second_homing_speed: 5

[stepper_y]
step_pin: PD9
dir_pin: !PD8
enable_pin: !PA0
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: ^PA1
position_min: -5
position_endstop: 212
position_max: 212
homing_speed: 40
second_homing_speed: 5

[stepper_z]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB5
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 1.25
endstop_pin: ^PB9
position_min: 0
position_endstop: 0
position_max: 201
homing_speed: 4
second_homing_speed: 2

#[thermistor DAVINCI_ext]
#temperature1: 22 # Works but fails to calibrate above 200
#resistance1: 100000
#beta: 2350.31
#temperature1: 22 # Gives Math Domain Error corrected with change to adc_temperature
#resistance1: 100000
#temperature2: 200
#resistance2: 5000
#temperature3: 260
#resistance3: 1800

[adc_temperature DAVINCI_ext]
temperature1: 22 # This one is working fine (edc eh?)
resistance1: 100000
temperature2: 200
resistance2: 5000
temperature3: 260
resistance3: 1800

[extruder]
pwm_cycle_time = 0.0166
step_pin: PB7
dir_pin: PB6
enable_pin: !PB8
microsteps: 16
rotation_distance: 32.3232
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA13
sensor_type: DAVINCI_ext
pullup_resistor: 51000
sensor_pin: PB20
control = watermark
min_temp: -20
max_temp: 300
min_extrude_temp: 170


#[adc_temperature DAVINCI_bed] #Gave ADC error when tested, may return later if need be
#temperature1: 22 # 
#resistance1: 440000
#temperature2: 40
#resistance2: 200000
#temperature3: 100
#resistance3: 25000

[thermistor DAVINCI_bed]
#temperature1: 22 # using 51k pullup
#resistance1: 440000.000
#beta: 4048.56 # 22c@440k 100c@25k
temperature1: 22 # pullup=4.7k good so far
resistance1: 440000
temperature2: 40
resistance2: 200000
temperature3: 100
resistance3: 25000


[heater_bed]
pwm_cycle_time = 0.0166
heater_pin: PA12
sensor_type: DAVINCI_bed
sensor_pin: PB21
pullup_resistor: 51000
control = watermark
min_temp: -20
max_temp: 150

[output_pin buzz]
pin: PB15
pwm: True
shutdown_value: 0
cycle_time: 0.001
scale: 1

[static_digital_output amber_led]
pins: !PB27

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[controller_fan system_fan]
pin: PC26
hardware_pwm: True
kick_start_time: 1.0
max_power: 1.0
idle_timeout: 300
idle_speed: 0.5
shutdown_speed: 1.0
heater: heater_bed,extruder

[heater_fan hotend_fan]
pin: PD0
heater: extruder
heater_temp: 50.0
kick_start_time: 0.200

[filament_switch_sensor switch_sensor]
pause_on_runout: True
switch_pin: !PA15
#runout_gcode:
#insert_gcode:
#event_delay:
#pause_delay:

[filament_motion_sensor motion_sensor]
pause_on_runout: True
detection_length: 7.0
extruder: extruder
switch_pin: PA17
#runout_gcode:
#insert_gcode:
#event_delay:
#pause_delay:

[filament_switch_sensor Cartrige1]
switch_pin: ^PB0  # Filament Cart1 pin

[filament_switch_sensor Cartrige2]
switch_pin: ^!PB1  # Filament Cart1 pin

[filament_switch_sensor Top_Cover]
switch_pin: PC24

[output_pin Case_Light]
pin: PB11
value: 1

[output_pin LCD_Light]
pin: PB23
value: 1

[probe]
pin: !PB2
x_offset: 0 # probe has x_offset, but position moves to probe pads take this offset into account already so offset is set to 0
y_offset: 0
z_offset: 0 # probe pad is .28mm thick, probe offset from nozzle is .28mm so is 0 offset
speed: 5
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 5
# note, its maybe a good idea to recalculate probe pad positions and use a real offset so the printer knows it has one

[bed_screws]
screw1: 190, 170
screw1_fine_adjust: 208, 204
screw1_name: rear right screw 
screw2: 10, 170
screw2_fine_adjust: 208, -5
screw2_name: rear left screw
screw3: 100, 10
screw3_fine_adjust: 22, -5
screw3_name: front screw
# Use the fine adjusts for verifying probe has contact with the pads
# Youll need to open a console on a new tab and use QUERY_PROBE on each pad
# Before hitting accept, this ensures the calibrate tilt function works.
# Use multi-probe utilties to assist on fine tuning each screw
# Starting with the back right probe pad. set close to zero as possible .225 was davinci recommendation but I try to hit .100 or less...
# Then back left screw to make front right corner match the front left corner
# Then adjust front screw to set front left/right corners to match the back right corner.
# none of the probe pads are perfect, so I have set the probe to average 3 successful attempts in a row within tollerance, with upto 6 retries. 

[screws_tilt_adjust]
screw1: 208, 204 # Probe Point 1
screw1_name: back right screw
screw2: 208, -5 # probe point 2
screw2_name: back left screw
screw3: 22, -5 #probe point 3
screw3_name: front screw
horizontal_move_z: 5.0
speed: 100.0
screw_thread: CCW-M3

#[bed_mesh] 
# {is not compatible with screws_tilt_adjust, enable one or the other} 
# bed_mesh disabled since we cant do it on the DaVinci without a conductive bed surface for the probe
#speed: 120
#horizontal_move_z: 5
#mesh_min: 2, 2
#mesh_max: 198, 198
#probe_count: 5, 5

[bed_tilt]
#x_adjust: 0
#y_adjust: 0
#z_adjust: 0
# The above parameters may be set manually, or automaticlly. 
# can be run by macro per session or saved in the config above to activate at boot.
# The remaining parameters control a BED_TILT_CALIBRATE extended
# g-code command that may be used to calibrate appropriate x and y
# adjustment parameters.
points: 
    208,204
    208,-5
    22,-5
    22,204
speed: 50
horizontal_move_z: 5

[display] # Not working at this time, buttons do work 
lcd_type: hd44780
rs_pin: PC22
e_pin: PB24
d4_pin: PC6
d5_pin: PC7
d6_pin: PC8
d7_pin: PC9
up_pin: PC19 #Up Button
down_pin: PC29 #Down Button
back_pin: PA26 #left Button
click_pin: PA27 #Ok Button
kill_pin: ^!PA28 #Home Button
# Kill Button is the largest button near LCD
hd44780_protocol_init: True
line_length: 16

[display_status]

